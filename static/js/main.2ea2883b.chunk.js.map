{"version":3,"sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Contact/ContactItem/ContactItem.styled.js","components/Contact/ContactItem/ContactItem.jsx","components/Contact/ContactList/ContactList.jsx","components/utils/storage.js","App.js","index.js"],"names":["Label","styled","label","INITIAL_STATE","name","number","ContactForm","state","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","onSubmit","reset","this","type","pattern","title","required","onChange","Component","Filter","filter","handleOnChange","toLowerCase","onFilter","StyledContact","li","ContactItem","onDelete","onClick","ContactList","contacts","map","id","STORAGE_NAME","App","handleFilter","handlerOnSubmit","find","contact","alert","newContact","createContact","newContactList","handleDelete","localStorage","getItem","JSON","parse","loadContacts","_prevProps","prevState","setItem","stringify","uuidv4","includes","getFiltered","React","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2ea2883b.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const Label = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 10px;\r\n  + input[type=\"submit\"] {\r\n    cursor: pointer;\r\n    &:hover {\r\n      background-color: aquamarine;\r\n    }\r\n  }\r\n`;\r\n","import { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Label } from \"./ContactForm.styled\";\r\n\r\nconst INITIAL_STATE = {\r\n  name: \"\",\r\n  number: \"\",\r\n};\r\n\r\nclass ContactForm extends Component {\r\n  state = { ...INITIAL_STATE };\r\n\r\n  handleChange = ({ target: { name, value } }) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onSubmit({ ...this.state });\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ ...INITIAL_STATE });\r\n  };\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <Label>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={this.handleChange}\r\n            value={name}\r\n          />\r\n        </Label>\r\n\r\n        <Label>\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            onChange={this.handleChange}\r\n            value={number}\r\n          />\r\n        </Label>\r\n        <input type=\"submit\" value=\"Add contact\" />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\nexport default ContactForm;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Label = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { Label } from \"./Filter.styled\";\r\nexport class Filter extends Component {\r\n  state = { filter: \"\" };\r\n\r\n  handleOnChange = ({ target: { name, value } }) => {\r\n    const filter = { [name]: value.toLowerCase() };\r\n    this.setState(filter);\r\n    this.props.onFilter(filter);\r\n  };\r\n\r\n  render() {\r\n    const { filter } = this.state;\r\n    return (\r\n      <Label>\r\n        Find contacts by name\r\n        <input\r\n          name=\"filter\"\r\n          value={filter}\r\n          onChange={this.handleOnChange}\r\n        ></input>\r\n      </Label>\r\n    );\r\n  }\r\n}\r\n\r\nFilter.propTypes = {\r\n  onFilter: PropTypes.func,\r\n};\r\n\r\nexport default Filter;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const StyledContact = styled.li`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  button {\r\n    cursor: pointer;\r\n    &:hover {\r\n      background-color: tomato;\r\n    }\r\n  }\r\n`;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { StyledContact } from \"./ContactItem.styled\";\r\nclass ContactItem extends Component {\r\n  render() {\r\n    const { name, number, onDelete } = this.props;\r\n    return (\r\n      <StyledContact>\r\n        {name}: {number}\r\n        <button onClick={onDelete}>delete</button>\r\n      </StyledContact>\r\n    );\r\n  }\r\n}\r\n\r\nContactItem.propTypes = {\r\n  contact: PropTypes.shape({\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n    id: PropTypes.string,\r\n  }),\r\n  onDelete: PropTypes.func,\r\n};\r\n\r\nexport default ContactItem;\r\n","import ContactItem from \"../../Contact\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const ContactList = ({ contacts, onDelete }) => {\r\n  return (\r\n    <div>\r\n      <ul>\r\n        {contacts.map(({ id, name, number }) => (\r\n          <ContactItem\r\n            key={id}\r\n            name={name}\r\n            number={number}\r\n            onDelete={() => onDelete(id)}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array,\r\n  onDelete: PropTypes.func,\r\n};\r\n","const STORAGE_NAME = \"contacts\";\r\n\r\nexport const loadContacts = () => {\r\n  const contacts = localStorage.getItem(STORAGE_NAME);\r\n  if (contacts) {\r\n    return JSON.parse(contacts);\r\n  }\r\n\r\n  return [];\r\n};\r\n\r\nexport const saveContacts = (contacts) => {\r\n  localStorage.setItem(STORAGE_NAME, JSON.stringify(contacts));\r\n};\r\n","import React from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport { Filter } from \"./components/Filter/Filter\";\nimport { ContactList } from \"./components/Contact\";\nimport { saveContacts, loadContacts } from \"./components/utils/storage\";\n\nclass App extends React.Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const contacts = loadContacts();\n    this.setState({ contacts });\n  }\n\n  componentDidUpdate(_prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      saveContacts(this.state.contacts);\n    }\n  }\n\n  createContact(e) {\n    const { name, number } = e;\n    return {\n      id: uuidv4(),\n      name: name,\n      number: number,\n    };\n  }\n\n  handleFilter = (e) => {\n    this.setState(e);\n  };\n\n  handlerOnSubmit = (e) => {\n    const { contacts } = this.state;\n    if (contacts.find((contact) => contact.name === e.name)) {\n      alert(`${e.name} is already in contacts`);\n    } else {\n      const newContact = this.createContact(e);\n      const newContactList = [...contacts, newContact];\n      this.setState({ contacts: newContactList });\n    }\n  };\n\n  handleDelete = (e) => {\n    const { contacts } = this.state;\n    this.setState({ contacts: contacts.filter((contact) => contact.id !== e) });\n  };\n\n  getFiltered() {\n    const { contacts, filter } = this.state;\n\n    return filter\n      ? contacts.filter((contact) =>\n          contact.name.toLowerCase().includes(filter)\n        )\n      : contacts;\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.handlerOnSubmit} />\n\n        <h2>Contacts</h2>\n        <Filter onFilter={this.handleFilter} />\n        <ContactList\n          contacts={this.getFiltered()}\n          onDelete={this.handleDelete}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}